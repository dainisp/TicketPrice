plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '4.12.1'
ext.junitPlatformVersion = '1.0.1'
ext.junitJupiterVersion  = '5.4.1'
ext.log4jVersion         = '2.9.0'


dependencies {
    implementation 'org.springframework:spring-core:5.2.10.RELEASE'
    implementation 'org.springframework:spring-beans:5.2.10.RELEASE'
    implementation 'org.springframework:spring-context:5.2.10.RELEASE'
    implementation 'org.springframework.boot:spring-boot:2.3.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.4.RELEASE'
    implementation 'javax.inject:javax.inject:1'
//compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.3'
    //compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.3'
    implementation 'org.testng:testng:6.14.3'
    implementation 'org.testng:testng:6.14.3'


    testImplementation('org.springframework.boot:spring-boot-starter-test')

   // testCompile  group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.1'
   // testRuntime  group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.4.1'


    testImplementation("org.junit.jupiter:junit-jupiter:${junitJupiterVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    // If you also want to support JUnit 3 and JUnit 4 tests
   // testCompile("junit:junit:${junit4Version}")
  //  testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

    // To avoid compiler warnings about @API annotations in JUnit code
   // testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')

    // To use Log4J's LogManager
    testRuntimeOnly("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    testRuntimeOnly("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
   // testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")

}

test {

    useJUnitPlatform()

}